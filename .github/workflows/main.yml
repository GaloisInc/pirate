name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: |
        sudo apt-get install -y clang valgrind
    - name: googletest
      run: |
        mkdir ~/googletest
        cd ~/googletest
        wget -qO - https://github.com/google/googletest/archive/release-1.10.0.tar.gz | tar -xz
        cmake -D CMAKE_INSTALL_PREFIX:PATH=$HOME/googletest -D CMAKE_BUILD_TYPE=Release googletest-release-1.10.0
        cmake --build . --target install
    - name: build Mercury loopback
      run: |
        cd devices/mercury/loopback_ilip
        make
        sudo insmod gaps_ilip.ko
        test -c /dev/gaps_ilip_0_root || exit 1
    - name: build libpirate
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=../dist/libpirate \
              -DGTEST_ROOT:PATH=$HOME/googletest \
              -DPIRATE_UNIT_TEST=ON \
              -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON  \
              ..
        make
        make install
    - name: Make libpirate artifact
      uses: actions/upload-artifact@v1
      with:
        name: libpirate
        path: dist/libpirate
      if: github.ref == 'refs/heads/master'
    - name: libpirate tests
      timeout-minutes: 1
      run: |
        cd build/libpirate
        ./gaps_channels_test
        make valgrind
    - name: build demos
      run: |
        cd build
        cmake -DGAPS_DEMOS=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        make
    - name: time_demo tests
      run: |
        cd build/demos/time_demo/test
        ./ts_test.sh
    - name: Build documentation
      run: |
        pip3 install sphinx
        export PATH="$HOME/.local/bin:$PATH"
        sphinx-build -M html doc images/ubuntu/doc
    - name: Build pirateteam/ubuntu
      run: |
        cp -a dist images/ubuntu
        cp -a libpirate images/ubuntu
        cp -a demos images/ubuntu
        cp -a CMakeLists.txt images/ubuntu
        docker build -t pirateteam/ubuntu images/ubuntu
        docker save pirateteam/ubuntu | gzip > ubuntu-latest.tar.gz
      if: github.ref == 'refs/heads/master'
    - name: Make pirateteam/ubuntu artifact
      uses: actions/upload-artifact@v1
      with:
        name: ubuntu-latest
        path: ubuntu-latest.tar.gz
      if: github.ref == 'refs/heads/master'
    - name: Post docker images
      run: |
        echo ${{ secrets.docker_password }} | docker login -u gapspirateteam --password-stdin
        docker push pirateteam/ubuntu
      if: github.ref == 'refs/heads/master'
  shmem:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: |
        sudo apt-get install -y clang valgrind
    - name: googletest
      run: |
        mkdir ~/googletest
        cd ~/googletest
        wget -qO - https://github.com/google/googletest/archive/release-1.10.0.tar.gz | tar -xz
        cmake -D CMAKE_INSTALL_PREFIX:PATH=$HOME/googletest -D CMAKE_BUILD_TYPE=Release googletest-release-1.10.0
        cmake --build . --target install
    - name: build Mercury loopback
      run: |
        cd devices/mercury/loopback_ilip
        make
        sudo insmod gaps_ilip.ko
        test -c /dev/gaps_ilip_0_root || exit 1
    - name: build libpirate
      run: |
        mkdir -p build
        cd build
        cmake -DGTEST_ROOT:PATH=$HOME/googletest \
              -DPIRATE_UNIT_TEST=ON \
              -DPIRATE_SHMEM_FEATURE=ON \
              -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
              ..
        make
    - name: libpirate tests
      timeout-minutes: 1
      run: |
        cd build/libpirate
        ./gaps_channels_test
        make valgrind
  gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: build libpirate
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_C_COMPILER="gcc" -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        make
    - name: build demos
      run: |
        cd build
        cmake -DCMAKE_C_COMPILER="gcc" -DGAPS_DEMOS=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        make
  gaps:
    runs-on: ubuntu-latest
    container: docker://pirateteam/llvm-ubuntu:latest
    steps:
    - uses: actions/checkout@v1
    - name: install dependencies
      run: |
        apt-get update
        apt-get install --no-install-recommends -y libjpeg-dev libssl-dev libx11-dev
    - name: googletest
      run: |
        mkdir ~/googletest
        cd ~/googletest
        wget -qO - https://github.com/google/googletest/archive/release-1.10.0.tar.gz | tar -xz
        cmake -D CMAKE_INSTALL_PREFIX:PATH=$HOME/googletest -D CMAKE_BUILD_TYPE=Release googletest-release-1.10.0
        cmake --build . --target install
    - name: build libpirate
      run: |
        mkdir -p build
        cd build
        cmake -DGTEST_ROOT:PATH=$HOME/googletest \
              -DGAPS_ENABLE=ON -DPIRATE_UNIT_TEST=ON \
              -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
              ..
        make
    - name: libpirate tests
      timeout-minutes: 1
      run: |
        cd build/libpirate
        ./gaps_channels_test
        make valgrind
    - name: Build demos
      run: |
        cd build
        cmake -DGAPS_ENABLE=ON -DGAPS_DEMOS=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        make
    - name: time_demo tests
      run: |
        cd build/demos/time_demo/test
        ./ts_test.sh
  ng_demo:
    needs: build
    runs-on: ubuntu-latest
    container: docker://pirateteam/ubuntu:latest
    steps:
    - uses: actions/checkout@v1
    - name: Configure
      run: |
        mkdir pnt_demo
        mkdir build_ngc && cd build_ngc
        cmake -DCMAKE_INSTALL_PREFIX=pnt_demo \
              -DCMAKE_EXE_LINKER_FLAGS=-static \
              ../demos/pnt_demo/4.pirate/
    - name: Make
      run: |
        cd build_ngc
        make
        make install
    - name: Make demo artifacts
      uses: actions/upload-artifact@v1
      with:
        name: pnt_demo
        path: build/pnt_demo
