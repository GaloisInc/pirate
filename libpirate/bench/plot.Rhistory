library(reshape)
library(ggplot2)
library(scales)

throughput <- read.csv('throughput.results', sep=" ", header=FALSE)
names(throughput) <- c('scenario', 'size', 'MB/s')
mt <- melt(throughput, id=c('scenario', 'size'))
mt$scenario <- factor(mt$scenario, level=c('fuse-unix-pipe', 'unix-pipe', 'shmem'))
g <- ggplot(mt, aes(size, value, color = scenario)) + geom_point(size=4) + geom_line(size=2) + scale_x_continuous(trans='log2', breaks=2^(c(0:10)*2), labels=parse(text=paste("2^",c(0:10)*2,sep=""))) + scale_y_continuous(trans='log2', breaks=2^c(-3:20), minor_breaks=NULL, labels=formatC(2^c(-3:20), big.mark=",",digits=10)) + ggtitle("Interprocess Communication Throughput (log-log graph)") + xlab("Message Size (bytes)") + ylab("Throughput (MB/s)") + theme(text = element_text(size=12), axis.text=element_text(size=12), legend.text=element_text(size=12), legend.position=c(0.8,0.2))

pdf("channel-throughput.pdf")
print(g)
dev.off()


latency <- read.csv('latency.results', sep=" ", header=FALSE)
names(latency) <- c('scenario', 'size', 'ns')
mt <- melt(latency, id=c('scenario', 'size'))
mt$scenario <- factor(mt$scenario, level=c('fuse-unix-pipe', 'unix-pipe', 'shmem'))
g <- ggplot(mt, aes(size, value, color = scenario)) + geom_point(size=4) + geom_line(size=2) + scale_x_continuous(trans='log2', breaks=2^(c(0:10)*2), labels=parse(text=paste("2^",c(0:10)*2,sep=""))) + scale_y_continuous(trans='log2', breaks=2^c(7:22), minor_breaks=NULL, labels=comma) + ggtitle("Interprocess Communication Latency (log-log graph)") + xlab("Message Size (bytes)") + ylab("Latency (ns)") + theme(text = element_text(size=12), axis.text=element_text(size=12), legend.text=element_text(size=12), legend.position=c(0.2,0.8))

pdf("channel-latency.pdf")
print(g)
dev.off()
