/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Identificador de configuración. Mac, Linux y Win32 son identificadores especiales de configuraciones que se seleccionarán automáticamente en esas plataformas, pero el identificador puede ser cualquier texto.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Ruta de acceso completa del compilador usado (por ejemplo, /usr/bin/gcc) para que IntelliSense sea más preciso.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Argumentos del compilador para modificar las inclusiones o definiciones usadas (por ejemplo, -nostdinc++, -m32, etc.).",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Versión del estándar del lenguaje C que se va a usar para IntelliSense. Nota: Los estándares GNU solo se usan para consultar el compilador de conjuntos a fin de obtener definiciones GNU e IntelliSense emulará la versión del estándar C equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Versión del estándar del lenguaje C++ que se va a usar para IntelliSense. Nota: Los estándares GNU solo se usan para consultar el compilador de conjuntos a fin de obtener definiciones GNU e IntelliSense emulará la versión del estándar C++ equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Ruta de acceso completa al archivo compile_commands.json del área de trabajo.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Lista de rutas de acceso que el motor de IntelliSense debe usar al buscar los encabezados incluidos. La búsqueda en estas rutas de acceso no es recursiva. Especifique \"**\" para indicar una búsqueda recursiva. Por ejemplo, \"${workspaceFolder}/**\" buscará en todos los subdirectorios, mientras que \"${workspaceFolder}\" no lo hará.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Lista de rutas de acceso que el motor de IntelliSense necesita usar para buscar los encabezados incluidos de las plataformas Mac. Solo se admite en configuraciones para Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "Versión de la ruta de acceso de inclusión del SDK de Windows que debe usarse en Windows; por ejemplo, \"10.0.17134.0\".",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Lista de definiciones del preprocesador que usará el motor de IntelliSense al analizar los archivos. También se puede usar “=” para establecer un valor (por ejemplo, VERSION=1).",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "The IntelliSense mode to use that maps to a platform and architecture variant of MSVC, gcc, or Clang. If not set or if set to ${default}, the extension will choose the default for that platform. Windows defaults to windows-msvc-x64, Linux defaults to linux-gcc-x64, and macOS defaults to macos-clang-x64.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Lista de archivos que tienen que incluirse antes que cualquier archivo de inclusión en una unidad de traducción.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "El identificador de una extensión de VS Code que puede proporcionar información de configuración de IntelliSense para los archivos de código fuente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "true para procesar únicamente los archivos incluidos directa o indirectamente como encabezados; false para procesar todos los archivos en las rutas de acceso de inclusión especificadas.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Ruta de acceso a la base de datos de símbolos generada. Si se especifica una ruta de acceso relativa, será relativa a la ubicación de almacenamiento predeterminada del área de trabajo.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Lista de rutas de acceso que se usarán para indexar y analizar símbolos del área de trabajo (que se usarán con comandos como Ir a definición, Buscar todas las referencias, etc.). La búsqueda en estas rutas de acceso es recursiva de forma predeterminada. Especifique \"*\" para indicar una búsqueda no recursiva. Por ejemplo, \"${workspaceFolder}\" buscará en todos los subdirectorios, mientras que \"${workspaceFolder}/*\" no lo hará.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Variables personalizadas que pueden consultarse mediante el comando ${cpptools:activeConfigCustomVariable} para utilizarlas en las variables de entrada en launch.json o tasks.json.",
	"c_cpp_properties.schema.json.definitions.env": "Las variables personalizadas se pueden reutilizar en cualquier ubicación del archivo mediante la sintaxis ${variable} o ${env:variable}.",
	"c_cpp_properties.schema.json.definitions.version": "Versión del archivo de configuración. La extensión administra esta propiedad, no la modifique.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Controla si la extensión notificará los errores detectados en c_cpp_properties.json."
}