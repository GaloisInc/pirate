/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.name": "Identificador de configuração. Mac, Linux e Win32 são identificadores especiais para as configurações que serão selecionadas automaticamente nessas plataformas, mas o identificador pode ser qualquer coisa.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerPath": "Caminho completo do compilador sendo usado, por exemplo, /usr/bin/gcc, para habilitar IntelliSense mais preciso.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compilerArgs": "Argumentos do compilador para modificar as inclusões ou definições usadas. Por exemplo, -nostdinc++, -m32, etc.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cStandard": "Versão do padrão da linguagem C a ser usada para o IntelliSense. Observação: os padrões GNU são usados apenas para consultar o compilador de conjunto para obter definições GNU e o IntelliSense emulará a versão padrão do C equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.cppStandard": "Versão do padrão da linguagem C++ a ser usada para o IntelliSense. Observação: os padrões GNU são usados apenas para consultar o compilador de conjunto para obter definições de GNU e o IntelliSense emulará a versão do C++ padrão equivalente.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.compileCommands": "Caminho completo do arquivo compile_commands.json para o workspace.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.includePath": "Uma lista de caminhos para o mecanismo do IntelliSense usar ao procurar cabeçalhos incluídos. A pesquisa nesses caminhos não é recursiva. Especifique '**' para indicar uma pesquisa recursiva. Por exemplo, '${workspaceFolder}/**' pesquisará em todos os subdiretórios, enquanto '${workspaceFolder}' não fará isso.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.macFrameworkPath": "Uma lista de caminhos para o mecanismo IntelliSense usar durante a pesquisa de cabeçalhos incluídos por meio das estruturas Mac. Compatível somente com configurações do Mac.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.windowsSdkVersion": "A versão do caminho de inclusão do SDK do Windows a ser usada no Windows, por exemplo, '10.0.17134.0'.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.defines": "Uma lista de definições de pré-processador para o mecanismo IntelliSense usar durante a análise de arquivos. Opcionalmente, use = para definir um valor, por exemplo, VERSION=1.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.intelliSenseMode": "The IntelliSense mode to use that maps to a platform and architecture variant of MSVC, gcc, or Clang. If not set or if set to ${default}, the extension will choose the default for that platform. Windows defaults to windows-msvc-x64, Linux defaults to linux-gcc-x64, and macOS defaults to macos-clang-x64.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.forcedInclude": "Uma lista de arquivos que devem ser incluídos antes de qualquer arquivo de inclusão em uma unidade de tradução.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.configurationProvider": "A ID de uma extensão do VS Code que pode fornecer informações de configuração do IntelliSense para arquivos de origem.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.limitSymbolsToIncludedHeaders": "true para processar somente os arquivos direta ou indiretamente incluídos como cabeçalhos, false para processar todos os arquivos nos caminhos de inclusão especificados.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.databaseFilename": "Caminho para o banco de dados de símbolo gerado. Se um caminho relativo for especificado, ele será criado em relação ao local de armazenamento padrão do workspace.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.browse.properties.path": "Uma lista de caminhos a serem usados para indexação e análise de símbolos do workspace (usados por Ir para Definição, Localizar Todas as Referências etc.). A pesquisa nesses caminhos é recursiva por padrão. Especifique '*' para indicar uma pesquisa não recursiva. Por exemplo, '${workspaceFolder}' pesquisará todos os subdiretórios enquanto '${workspaceFolder}/*' não fará isso.",
	"c_cpp_properties.schema.json.definitions.configurations.items.properties.customConfigurationVariables": "Variáveis personalizadas que podem ser consultadas por meio do comando ${cpptools:activeConfigCustomVariable} a serem usadas para as variáveis de entrada no launch.json ou tasks.json.",
	"c_cpp_properties.schema.json.definitions.env": "Variáveis personalizadas que podem ser reutilizadas em qualquer lugar neste arquivo usando a sintaxe ${variável} ou ${env:variável}.",
	"c_cpp_properties.schema.json.definitions.version": "Versão do arquivo de configuração. Esta propriedade é gerenciada pela extensão. Não a altere.",
	"c_cpp_properties.schema.json.definitions.enableConfigurationSquiggles": "Controla se a extensão relatará erros detectados em c_cpp_properties.json."
}